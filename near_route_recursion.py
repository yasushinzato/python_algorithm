# -*- coding: utf-8 -*-
"""
Created on Wed Mar  4 14:45:39 2020
経路の数を求める（再帰処理での実装）

┌┬┬┬┬┬┐
├┼┼┼┼┼┤
├┼┼┼┼┼┤
├┼┼┼┼┼┤
├┼┼┼┼┼┤
└┴┴┴┴┴┘

左下がスタートで右上がゴール

1―― 6 ―― 21―― 56――126――252――462
|   |    |    |    |    |    |
1―― 5 ―― 15―― 35―― 70――126――210
|   |    |    |    |    |    |
1―― 4 ―― 10―― 20―― 35―― 56―― 84
|   |    |    |    |    |    |
1―― 3 ―― 6 ―― 10―― 15―― 21―― 28
|   |    |    |    |    |    |
1―― 2 ―― 3 ―― 4 ―― 5 ―― 6 ―― 7
|   |    |    |    |    |    |
└―― 1 ―― 1 ―― 1 ―― 1 ―― 1 ―― 1
   
右にm回、上にn回移動する

@author: 81909
"""
import functools
M,N = 6, 5

# Pythonでは以下の1行を追加するだけで再帰処理をメモ化できる
@functools.lru_cache(maxsize = None)
def search(m, n):
    if (m == 0) or (n == 0):
        return 1
    
    return search(m - 1, n) + search(m, n - 1)

print(search(M, N))